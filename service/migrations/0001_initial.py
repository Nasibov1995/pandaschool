# Generated by Django 4.2.7 on 2024-02-26 08:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Blok',
                'verbose_name_plural': 'Bloklar',
            },
        ),
        migrations.CreateModel(
            name='BranchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Filial')),
            ],
            options={
                'verbose_name': 'Filial',
                'verbose_name_plural': 'Filiallar',
            },
        ),
        migrations.CreateModel(
            name='ClassModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Sinif',
                'verbose_name_plural': 'Siniflər',
            },
        ),
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Qrup',
                'verbose_name_plural': 'Qruplar',
            },
        ),
        migrations.CreateModel(
            name='LanguageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Xarici dil',
                'verbose_name_plural': 'Xarici dillər',
            },
        ),
        migrations.CreateModel(
            name='MonthModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Ay',
                'verbose_name_plural': 'Aylar',
            },
        ),
        migrations.CreateModel(
            name='SeasonModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Ad')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Başlama tarixi')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Bitmə tarixi')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='service.branchmodel', verbose_name='Filial')),
            ],
            options={
                'verbose_name': 'Sezon',
                'verbose_name_plural': 'Sezonlar',
            },
        ),
        migrations.CreateModel(
            name='StudentCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Kateqoriya',
                'verbose_name_plural': 'Kateqoriyalar',
            },
        ),
        migrations.CreateModel(
            name='StudentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=100, verbose_name='Soyad')),
                ('phone_number1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefon nömrəsi 1')),
                ('phone_number2', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefon nömrəsi 2')),
                ('wp_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Whatsapp nömrəsi')),
                ('status', models.CharField(choices=[('DE', 'Davam edir'), ('D', 'Dondurulub'), ('B', 'Bitirilib')], default='DE', max_length=2, verbose_name='Status')),
                ('dim_point', models.FloatField(blank=True, null=True, verbose_name='DİM balı')),
                ('sector', models.CharField(choices=[('AZ', 'Azərbaycan dili'), ('RU', 'Rus dili')], default='AZ', max_length=2, verbose_name='Bölmə')),
                ('specialty', models.CharField(blank=True, max_length=300, null=True, verbose_name='İxtisas')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Ödənişin tarixi')),
                ('payment_amount', models.FloatField(default=0, verbose_name='Ödəniş məbləği')),
                ('abiturient_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_students', to='service.classmodel', verbose_name='Sinif')),
                ('blocks', models.ManyToManyField(related_name='block_students', to='service.blockmodel', verbose_name='Bloklar')),
                ('categories', models.ManyToManyField(related_name='students', to='service.studentcategorymodel', verbose_name='Kateqoriyalar')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_students', to='service.groupmodel', verbose_name='Qrup')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='language_students', to='service.languagemodel', verbose_name='Xarici dil')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='service.seasonmodel', verbose_name='Sezon')),
            ],
            options={
                'verbose_name': 'Tələbə',
                'verbose_name_plural': 'Tələbələr',
            },
        ),
        migrations.CreateModel(
            name='TeacherModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Ad')),
                ('last_name', models.CharField(max_length=100, verbose_name='Soyad')),
                ('specialty', models.CharField(blank=True, max_length=300, null=True, verbose_name='İxtisas')),
                ('section', models.CharField(blank=True, max_length=300, null=True, verbose_name='Bölmə')),
                ('salary', models.FloatField(blank=True, null=True, verbose_name='Aylıq əmək haqqı')),
                ('phone_number1', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefon nömrəsi')),
                ('wp_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Whatsapp nömrəsi')),
                ('status', models.CharField(choices=[('QE', 'Qeyd edilməyib'), ('TS', 'Tələbə sayı'), ('FM', 'Fiks maaş')], default='QE', max_length=2, verbose_name='Status')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Ödənişin tarixi')),
                ('payment_amount', models.FloatField(default=0, verbose_name='Ödəniş məbləği')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='service.seasonmodel', verbose_name='Sezon')),
            ],
            options={
                'verbose_name': 'Müəllim',
                'verbose_name_plural': 'Müəllimlər',
            },
        ),
        migrations.CreateModel(
            name='TeacherPaymentInformationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Ödənildiyi tarix')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Ödənişin tarixi')),
                ('payment_amount', models.FloatField(default=0, verbose_name='Ödəniş məbləği')),
                ('payment_type', models.CharField(choices=[('N', 'Nağd'), ('HK', 'Hesaba köçürmə')], default='N', max_length=2, verbose_name='Ödənişin növü')),
                ('status', models.BooleanField(default=False, verbose_name='Ödənişin statusu')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_month_payments', to='service.monthmodel', verbose_name='Ay')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_payments', to='service.teachermodel', verbose_name='Müəllim')),
            ],
            options={
                'verbose_name': 'Müəllim ödəniş məlumatı',
                'verbose_name_plural': 'Müəllim ödəniş məlumatları',
            },
        ),
        migrations.CreateModel(
            name='SubjectModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Ad')),
                ('categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_subjects', to='service.studentcategorymodel', verbose_name='Kateqoriya')),
            ],
            options={
                'verbose_name': 'Fənn',
                'verbose_name_plural': 'Fənnlər',
            },
        ),
        migrations.CreateModel(
            name='StudentPaymentInformationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Ödənişin tarixi')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Ödənildiyi tarix')),
                ('payment_amount', models.FloatField(default=0, verbose_name='Ödəniş məbləği')),
                ('payment_type', models.CharField(choices=[('N', 'Nağd'), ('HK', 'Hesaba köçürmə')], default='N', max_length=2, verbose_name='Ödənişin növü')),
                ('status', models.BooleanField(default=False, verbose_name='Ödənişin statusu')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_payment_category', to='service.studentcategorymodel', verbose_name='Kateqoriyalar')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='month_payments', to='service.monthmodel', verbose_name='Ay')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stduent_payments', to='service.studentmodel', verbose_name='Tələbə')),
            ],
            options={
                'verbose_name': 'Tələbə ödəniş məlumatı',
                'verbose_name_plural': 'Tələbə ödəniş məlumatları',
            },
        ),
        migrations.AddField(
            model_name='studentmodel',
            name='subjects',
            field=models.ManyToManyField(related_name='subject_students', to='service.subjectmodel', verbose_name='Fənnlər'),
        ),
        migrations.AddField(
            model_name='studentmodel',
            name='teachers',
            field=models.ManyToManyField(related_name='teacher_students', to='service.teachermodel', verbose_name='Müəllimlər'),
        ),
        migrations.AddField(
            model_name='monthmodel',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='months', to='service.seasonmodel', verbose_name='Sezon'),
        ),
        migrations.AddField(
            model_name='languagemodel',
            name='categories',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_languages', to='service.studentcategorymodel', verbose_name='Kateqoriya'),
        ),
        migrations.AddField(
            model_name='groupmodel',
            name='categories',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_groups', to='service.studentcategorymodel', verbose_name='Kateqoriya'),
        ),
        migrations.AddField(
            model_name='classmodel',
            name='categories',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_classes', to='service.studentcategorymodel', verbose_name='Kateqoriya'),
        ),
        migrations.AddField(
            model_name='blockmodel',
            name='categories',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_blocks', to='service.studentcategorymodel', verbose_name='Kateqoriya'),
        ),
    ]
